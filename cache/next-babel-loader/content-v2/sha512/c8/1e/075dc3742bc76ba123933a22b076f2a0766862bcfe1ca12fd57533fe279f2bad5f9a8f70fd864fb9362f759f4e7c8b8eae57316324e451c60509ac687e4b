{"ast":null,"code":"import _toConsumableArray from \"/home/runner/work/nextjscrud/nextjscrud/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar fs = require('fs');\n\nvar users = require('data/users.json');\n\nexport var usersRepo = {\n  getAll: getAll,\n  getById: getById,\n  create: create,\n  update: update,\n  \"delete\": _delete\n};\n\nfunction getAll() {\n  return users;\n}\n\nfunction getById(id) {\n  return users.find(function (x) {\n    return x.id.toString() === id.toString();\n  });\n}\n\nfunction create(_ref) {\n  var title = _ref.title,\n      firstName = _ref.firstName,\n      lastName = _ref.lastName,\n      email = _ref.email,\n      role = _ref.role,\n      password = _ref.password;\n  var user = {\n    title: title,\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    role: role,\n    password: password\n  }; // validate\n\n  if (users.find(function (x) {\n    return x.email === user.email;\n  })) throw \"User with the email \".concat(user.email, \" already exists\"); // generate new user id\n\n  user.id = users.length ? Math.max.apply(Math, _toConsumableArray(users.map(function (x) {\n    return x.id;\n  }))) + 1 : 1; // set date created and updated\n\n  user.dateCreated = new Date().toISOString();\n  user.dateUpdated = new Date().toISOString(); // add and save user\n\n  users.push(user);\n  saveData();\n}\n\nfunction update(id, _ref2) {\n  var title = _ref2.title,\n      firstName = _ref2.firstName,\n      lastName = _ref2.lastName,\n      email = _ref2.email,\n      role = _ref2.role,\n      password = _ref2.password;\n  var params = {\n    title: title,\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    role: role,\n    password: password\n  };\n  var user = users.find(function (x) {\n    return x.id.toString() === id.toString();\n  }); // validate\n\n  if (params.email !== user.email && users.find(function (x) {\n    return x.email === params.email;\n  })) throw \"User with the email \".concat(params.email, \" already exists\"); // only update password if entered\n\n  if (!params.password) {\n    delete params.password;\n  } // set date updated\n\n\n  user.dateUpdated = new Date().toISOString(); // update and save\n\n  Object.assign(user, params);\n  saveData();\n} // prefixed with underscore '_' because 'delete' is a reserved word in javascript\n\n\nfunction _delete(id) {\n  // filter out deleted user and save\n  users = users.filter(function (x) {\n    return x.id.toString() !== id.toString();\n  });\n  saveData();\n} // private helper functions\n\n\nfunction saveData() {\n  fs.writeFileSync('data/users.json', JSON.stringify(users, null, 4));\n}","map":null,"metadata":{},"sourceType":"module"}